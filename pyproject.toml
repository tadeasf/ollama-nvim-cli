[project]
name = "ollama-cli"
version = "0.1.0"
description = "A CLI tool for chatting with Ollama models"
authors = [{ name = "Your Name", email = "your.email@example.com" }]
dependencies = [
    "typer>=0.9.0",
    "rich>=13.3.5",
    "click>=8.1.7",
    "prompt-toolkit>=3.0.48",
    "pyyaml>=6.0.2",
    "aiohttp>=3.8.5",
    "httpx>=0.27.2",
    "pyaml>=24.9.0",
    "catppuccin>=2.3.4",
]
readme = "README.md"
requires-python = ">= 3.8"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = ["pyinstaller>=6.11.1"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/ollama_cli"]

[tool.poetry]
name = "ollama-cli"
version = "0.1.0"
description = "A CLI tool for chatting with Ollama models"
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = "^3.8"
typer = { extras = ["all"], version = "^0.9.0" }
pyyaml = "^6.0"
prompt-toolkit = "^3.0.36"
rich = "^13.3.5"
aiohttp = "^3.8.5"

[tool.poetry.scripts]
ollama-nvim-cli = "ollama_nvim_cli.cli:app"

[tool.rye.scripts]
build-binary = { cmd = "python scripts/build.py" }
onc = { cmd = "python -m ollama_nvim_cli.cli" }
"ollama-nvim-cli" = { cmd = "python -m ollama_nvim_cli.cli" }
build-pypi = { chain = [
    "pip install build twine",
    "python -m build",
    "twine check dist/*",
] }
